"use strict";exports.id=795,exports.ids=[795],exports.modules={5795:(e,r,t)=>{t.r(r),t.d(r,{fromProcess:()=>d});var i=t(4740),o=t(2313),s=t(2081),c=t(3837);let n=(e,r,t)=>{if(1!==r.Version)throw Error(`Profile ${e} credential_process did not return Version 1.`);if(void 0===r.AccessKeyId||void 0===r.SecretAccessKey)throw Error(`Profile ${e} credential_process returned invalid credentials.`);if(r.Expiration){let t=new Date;if(new Date(r.Expiration)<t)throw Error(`Profile ${e} credential_process returned expired credentials.`)}let i=r.AccountId;return!i&&t?.[e]?.aws_account_id&&(i=t[e].aws_account_id),{accessKeyId:r.AccessKeyId,secretAccessKey:r.SecretAccessKey,...r.SessionToken&&{sessionToken:r.SessionToken},...r.Expiration&&{expiration:new Date(r.Expiration)},...r.CredentialScope&&{credentialScope:r.CredentialScope},...i&&{accountId:i}}},a=async(e,r,t)=>{let i=r[e];if(r[e]){let a=i.credential_process;if(void 0!==a){let i=(0,c.promisify)(s.exec);try{let t;let{stdout:o}=await i(a);try{t=JSON.parse(o.trim())}catch{throw Error(`Profile ${e} credential_process returned invalid JSON.`)}return n(e,t,r)}catch(e){throw new o.mV(e.message,{logger:t})}}else throw new o.mV(`Profile ${e} did not contain credential_process.`,{logger:t})}else throw new o.mV(`Profile ${e} could not be found in shared credentials file.`,{logger:t})},d=(e={})=>async()=>{e.logger?.debug("@aws-sdk/credential-provider-process - fromProcess");let r=await (0,i.MX)(e);return a((0,i.Jl)(e),r,e.logger)}}};